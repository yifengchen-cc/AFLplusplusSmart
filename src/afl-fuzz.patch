--- AFLplusplus-2.63c/src/afl-fuzz.c	2020-04-09 16:23:37.000000000 +0800
+++ AFLplusplusSmart/src/afl-fuzz.c	2020-06-28 09:14:34.422100600 +0800
@@ -25,6 +25,39 @@
 
 #include "afl-fuzz.h"
 
+/* Check if a program exists */
+int program_exist(const char *pname) {
+  pid_t pid = 0;
+  int pipefd[2];
+  FILE* output;
+  char line[256];
+  int status;
+ 
+  if (pipe(pipefd) < 0) {
+    exit(1);
+  }
+
+  pid = fork();
+  if (pid == 0) {
+    close(pipefd[0]);
+    dup2(pipefd[1], STDOUT_FILENO);
+    dup2(pipefd[1], STDERR_FILENO);
+    
+    execlp("which", "which", pname, (char*) NULL);
+    exit(1); /* Stop the child process upon failure. */
+  } else {
+    close(pipefd[1]);
+    output = fdopen(pipefd[0], "r");
+    while (fgets(line, sizeof(line), output)) {
+      fprintf(stderr,"\n%s", line);
+			if (strlen(line) > 0) return 1; //the program exists
+    }
+    waitpid(pid, &status, 0);
+  }
+  return 0; //the program does not exist
+}
+
+
 static u8 *get_libradamsa_path(u8 *own_loc) {
 
   u8 *tmp, *cp, *rsl, *own_copy;
@@ -135,6 +168,14 @@
       "  Note: -V/-E are not precise, they are checked after a queue entry "
       "is done\n  which can be many minutes/execs later\n\n"
 
+      "Smart Fuzzing:\n\n"
+
+      "  -w model_type - type of input model - only peach is supported now \n"
+      "  -g input_model- path to input model file \n"
+      "  -h            - mix higher-order mutations with other mutations\n"
+      "  -l            - log input model mutations in log/<pid>.log of the output directory\n"
+      "  -H number     - Apply a maximum on the number of higher-order mutations\n\n"
+
       "Other stuff:\n"
       "  -T text       - text banner to show on the screen\n"
       "  -M / -S id    - distributed mode (see docs/parallel_fuzzing.md)\n"
@@ -257,7 +298,7 @@
   afl->init_seed = tv.tv_sec ^ tv.tv_usec ^ getpid();
 
   while ((opt = getopt(argc, argv,
-                       "+c:i:I:o:f:m:t:T:dnCB:S:M:x:QNUWe:p:s:V:E:L:hRP:")) > 0)
+                       "+c:i:I:o:f:m:t:T:dnCB:S:M:x:QNUWe:p:s:V:E:L:hRP:w:g:lhH:")) > 0)
 
     switch (opt) {
 
@@ -450,7 +491,7 @@
 
       case 'd':                                       /* skip deterministic */
 
-        if (afl->skip_deterministic) FATAL("Multiple -d options not supported");
+        if (afl->skip_deterministic && !afl->smart_mode) FATAL("Multiple -d options not supported");
         afl->skip_deterministic = 1;
         afl->use_splicing = 1;
         break;
@@ -658,7 +699,7 @@
 
       } break;
 
-      case 'h': show_help++; break;  // not needed
+      //case 'h': show_help++; break;  // not needed
 
       case 'R':
 
@@ -669,11 +710,70 @@
 
         break;
 
+      case 'w': /* SMART FUZZING mode */
+        if (afl->smart_mode) FATAL("Multiple -w options not supported");
+        afl->smart_mode = 1;
+
+        /* This will also skip deterministic fuzzing */
+        afl->skip_deterministic = 1;
+
+        if (!stricmp(optarg, "peach")) {
+          afl->model_type = MODEL_PEACH;
+          if (!program_exist("peach")) {
+		  FATAL("peach cannot be found. Please compile Peach and setup PATH environment variable correctly.");
+	  }
+
+        } else {
+          PFATAL ("Unknown Input Model. Only Peach is supported now");
+        }
+        break;
+
+      case 'g':
+        if (afl->input_model_file) FATAL("Multiple -g options not supported");
+
+        afl->input_model_file = optarg;
+
+        /* Check if exists */
+        FILE * f = fopen(afl->input_model_file, "r");
+        if (f) fclose(f);
+        else FATAL("File %s does not exist!", afl->input_model_file);
+
+        break;
+
+      case 'h':
+        if (afl->stacking_mutation_mode) FATAL("Multipe -h options not supported");
+        afl->stacking_mutation_mode = 1;
+        break;
+
+      case 'l':
+        if (afl->smart_log_mode) FATAL("Multiple -l options not supported");
+        afl->smart_log_mode = 1;
+        break;
+
+      case 'H':
+        if (afl->smart_mutation_limit) FATAL("Multiple -H options not supported");
+
+        errno = 0;
+        afl->smart_mutation_limit = strtol(optarg, NULL, 0);
+
+        if (errno) FATAL("Numeric format error of -H option");
+
+        break;
+
       default:
         if (!show_help) show_help = 1;
 
     }
 
+  if (afl->stacking_mutation_mode && !afl->smart_mode)
+      FATAL("Mixed mode (-h) requires smart fuzzing enabled (-w)");
+
+  if (afl->smart_mutation_limit && !afl->smart_mode)
+      FATAL("Smart mutations limit (-H) requires smart fuzzing enabled (-w)");
+
+  if (afl->input_model_file && (!afl->smart_mode || afl->model_type != MODEL_PEACH))
+      FATAL("Input model file (-g) is only for smart fuzzing using peach (-w peach)");
+
   if (optind == argc || !afl->in_dir || !afl->out_dir || show_help)
     usage(afl, argv[0], show_help);
 
@@ -907,6 +1007,10 @@
 
   setup_cmdline_file(afl, argv + optind);
 
+  /* Initialize AFLSmart logging */
+  if (afl->smart_mode && afl->smart_log_mode)
+    smart_log_init(afl->out_dir);
+
   read_testcases(afl);
   load_auto(afl);
 
